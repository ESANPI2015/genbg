# This graph normalizes an input to
# I. The range [0, 2*pi]
# II. Normalization to [0,4] (one negation for free)
# Input: x
# Output: x', -x' with x' normalized to [0,4]
edges:
- {fromNodeId: 1, fromNodeOutputIdx: 0, toNodeId: 2, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 3, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 3, fromNodeOutputIdx: 0, toNodeId: 4, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 4, fromNodeOutputIdx: 0, toNodeId: 5, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 3, fromNodeOutputIdx: 0, toNodeId: 6, toNodeInputIdx: 0, weight: 1}
nodes:
- id: 1
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'INPUT'
# |x|
- id: 2
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'ABS'
# map -x' = -|x|/pi/2 to range [-4, 0]
- id: 3
  inputs:
  - {idx: 0, bias: -0.636619772, default: 0.0, type: 'PRODUCT'}
  - {idx: 1, bias: 0, default: 4, type: 'SUM'}
  type: 'MOD'
# x'
- id: 4
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'ABS'

- id: 5
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'OUTPUT'
- id: 6
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'OUTPUT'
