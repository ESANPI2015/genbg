edges:
- {fromNodeId: 1, fromNodeOutputIdx: 0, toNodeId: 2, toNodeInputIdx: 0, weight: 1}

- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 3, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 4, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 5, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 3, toNodeInputIdx: 2, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 4, toNodeInputIdx: 2, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 1, toNodeId: 3, toNodeInputIdx: 1, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 1, toNodeId: 4, toNodeInputIdx: 1, weight: 1}
- {fromNodeId: 3, fromNodeOutputIdx: 0, toNodeId: 5, toNodeInputIdx: 2, weight: 1}
- {fromNodeId: 4, fromNodeOutputIdx: 0, toNodeId: 5, toNodeInputIdx: 1, weight: 1}

- {fromNodeId: 5, fromNodeOutputIdx: 0, toNodeId: 10, toNodeInputIdx: 0, weight: 1}

- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 11, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 10, fromNodeOutputIdx: 1, toNodeId: 11, toNodeInputIdx: 1, weight: 1}
- {fromNodeId: 10, fromNodeOutputIdx: 0, toNodeId: 11, toNodeInputIdx: 2, weight: 1}
- {fromNodeId: 2, fromNodeOutputIdx: 0, toNodeId: 12, toNodeInputIdx: 0, weight: 1}
- {fromNodeId: 10, fromNodeOutputIdx: 0, toNodeId: 12, toNodeInputIdx: 1, weight: 1}
- {fromNodeId: 11, fromNodeOutputIdx: 0, toNodeId: 12, toNodeInputIdx: 2, weight: 1}

- {fromNodeId: 12, fromNodeOutputIdx: 0, toNodeId: 20, toNodeInputIdx: 0, weight: 1}
nodes:
- id: 1
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'INPUT'
- id: 2
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'SUBGRAPH'
  subgraph_name: 'graphs/special/normalize.yml'

# Pass z, 2 - z, z - 2, 4 - z to cosine_4 if z in [0,1],[1,2],[2,3],[3,4]
- id: 3
  inputs:
  - {idx: 0, bias: -1.0, default: 0.0, type: 'SUM'} # > 1 ?
  - {idx: 1, bias: 2.0, default: 0.0, type: 'SUM'} # true (2-z)
  - {idx: 2, bias: 0, default: 0.0, type: 'SUM'} # false (z)
  type: '>0'
- id: 4
  inputs:
  - {idx: 0, bias: -3.0, default: 0.0, type: 'SUM'} # > 3 ?
  - {idx: 1, bias: 4.0, default: 0.0, type: 'SUM'} # true (4-z)
  - {idx: 2, bias: -2.0, default: 0.0, type: 'SUM'} # false (z-2)
  type: '>0'
- id: 5
  inputs:
  - {idx: 0, bias: -2.0, default: 0.0, type: 'SUM'} # > 2 ?
  - {idx: 1, bias: 0.0, default: 0.0, type: 'SUM'} # true (4-z || z - 2)
  - {idx: 2, bias: 0.0, default: 0.0, type: 'SUM'} # false (2-z || z)
  type: '>0'
  
- id: 10
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'SUBGRAPH'
  subgraph_name: 'graphs/special/cosine_4.yml'

# If 1 < z < 3, we choose -cos else cos
- id: 11
  inputs:
  - {idx: 0, bias: -1.0, default: 0.0, type: 'SUM'} # > 1 ?
  - {idx: 1, bias: 0, default: 0.0, type: 'SUM'} # true -cos
  - {idx: 2, bias: 0, default: 0.0, type: 'SUM'} # false cos
  type: '>0'
- id: 12
  inputs:
  - {idx: 0, bias: -3.0, default: 0.0, type: 'SUM'} # > 3 ?
  - {idx: 1, bias: 0, default: 0.0, type: 'SUM'} # true cos
  - {idx: 2, bias: 0, default: 0.0, type: 'SUM'} # false result from previous comparison
  type: '>0'

- id: 20
  inputs:
  - {idx: 0, bias: 0, default: 0.0, type: 'SUM'}
  type: 'OUTPUT'
